---
title: "Forecasting interrupted time series"
author:
- familyname: Rostami-Tabar
  othernames: Bahman
  address:
    - Cardiff Business School
    - Wales CF10 3EU
    - United Kingdom
  email: rostami-tabarb@cardiff.ac.uk
  correspondingauthor: true
- familyname: Hyndman
  othernames: Rob J
  address:
    - Department of Econometrics & Business Statistics
    - Clayton VIC 3800
    - Australia
  email: Rob.Hyndman@monash.edu
abstract: "A brief summary of our ideas"
keywords: "blah, blah"
wpnumber: no/yr
jelcodes: C10,C14,C22
blind: false
cover: false
toc: false
bibliography: references.bib
biblio-style: authoryear-comp
format:
  wp-pdf:
    knitr:
      opts_chunk:
        dev: "CairoPDF"
fig-height: 5
fig-width: 8
keep-tex: true
number-sections: true
cite-method: biblatex
execute:
  echo: false
  warning: false
  message: false
  cache: false
---

```{r}
#| label: load
#| cache: false
#| eval: true
# Load all required packages
library(targets)
library(fpp3)

# Set ggplot colours and fonts
options(
  ggplot2.continuous.colour = "viridis",
  ggplot2.continuous.fill = "viridis",
  ggplot2.discrete.colour = c("#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442"),
  ggplot2.discrete.fill = c("#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442")
)
theme_set(theme_get() + theme(text = element_text(family = "Fira Sans")))

# Load main data objects from targets folder
tar_config_set(store = here::here("_targets"))
```

# Introduction

Time series are sometimes interrupted by unusual events; for example, a natural disaster may occur, or a there may be a temporary policy change. Many forecasters have faced this issue recently with the COVID-19 pandemic, where historical patterns may have been severely disrupted due to lockdowns and other restrictions. In this paper, we consider the problem of forecasting after such an event has occurred.

This is a different problem from change point detection. In the situations we consider, we know that a change has occurred, and we want to forecast the future after the change. Change point detection is about identifying when a change has occurred.

The changes in the series as a result of the disruption may be relatively simple, for example a left shift at the start of the disruption, and another at the end of the disruption. Or they may be more complex, with changes to the seasonal patterns, and changes to the level, which evolve over time. In this paper, we consider a range of models that can be used to handle such changes, and compare their performance on some real data sets.

Time series models usually assume that the future is similar to the past, at least in how the data evolve. But a big event like covid makes the future different from the past, at least in the short term.

# Handling interruptions when forecasting

We consider several possible ways to handle interruptions when forecasting.

## Use a highly adaptive model

Highly adaptive models can adjust to the interruption as it is happening, and will therefore be able to approximate the data generating process relatively well. For example, an ETS model with large smoothing parameters will be able to adjust to the interruption relatively quickly. This has the advantage of being a very simple solution that is easy to implement and fast to compute.

However, the prediction intervals will be large, because the model will have heavily discounted past data. In fact, the model will largely forget the past data other than the most recent observations, so there is no memory of the seasonal patterns and other dynamics that were present before the interruption. Consequently, the approach works best if there is no assumption that the post-interruption period will be similar to the pre-interruption period.

## Use a dynamic regression model with intervention covariates

A dynamic regression model with intervention covariates can be used to model the interruption explicitly. For example, if the intervention involves a simple level shift, with a reverse level shift at the end of the intervention, we can use a dummy variable to indicate the interruption period, and allow the model to adjust to the interruption. More complicated interventions can be handled by using more covariates.

This has the advantage of retaining the memory of the past, and so the seasonal patterns and other dynamics will be retained. However, the model will assume that the post-interruption period will be similar to the pre-interruption period, and so the prediction intervals may be be too narrow.

Advantages: retains full memory of the past, and allows the change period to be effectively modelled provided you choose the covariates well.

Disadvantages: requires a lot of thought to choose the covariates well. Assumes that the post-pandemic period will be similar to the pre-pandemic period.

## Treat the covid period as missing and use a model that handles missing values

Advantages: effectively ignores the change period

Disadvantages: throws away the covid-period data, and so starts the post-covid period with no recent history. Therefore prediction intervals will be relatively large.

## Estimate what might have been and adjust the data

Advantages: relatively simple and doesn't throw away the covid-period data.

Disadvantages: need to have good estimates of covid-period data, and that may be difficult to obtain. Forecasts are conditional on the estimates being correct.

# Examples

## Example: Ambulance attendances


```{r}
#| label: plot-data
tar_read(attended_plot)
tar_read(stl_plot)
```

```{r}
tar_load(fit)
fit |> filter(Area == "BC") |> select(ets) |> components() |> autoplot()
```

```{r}
#| label: forecast
tar_load(fc)
tar_load(df)
fc |> filter(Area == "BC", .model=="ets") |> autoplot(df)
fc |> filter(Area == "BC", .model=="stl_ets") |> autoplot(df)
fc |> filter(Area == "BC", .model=="arima") |> autoplot(df)
```
